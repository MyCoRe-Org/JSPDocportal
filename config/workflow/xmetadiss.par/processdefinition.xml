<?xml version="1.0" encoding="UTF-8"?>

<process-definition
  xmlns="urn:jbpm.org:jpdl-3.1"  name="xmetadiss">

  <!-- SWIMLANES (= process roles) -->

  <swimlane name="initiator" />
  
  <swimlane name="disseditor">
	<assignment class="org.mycore.frontend.workflowengine.jbpm.MCRPooledActorAssignmentHandler">
		<groupName>editorgroup1</groupName>
	</assignment>  
  </swimlane>
  
  <swimlane name="technicalAdministration">
    <assignment class="org.mycore.frontend.workflowengine.jbpm.MCRPooledActorAssignmentHandler">
		<groupName>admingroup</groupName>
	</assignment>       
  </swimlane>
  
  <swimlane name="subjectExpert">
    <!--   <assignment expression="user(ernie)" /> -->
  </swimlane>  
  
  <start-state name="start">
     <task name="initialization" swimlane="initiator">
     </task>     
     <transition name="go2processInitialized" to="processInitialized" />
  </start-state>

  <state name="processInitialized">
     <event type='node-enter'>
        <action class="org.mycore.frontend.workflowengine.jbpm.xmetadiss.MCRCreateAuthorAction" />
        <action class="org.mycore.frontend.workflowengine.jbpm.xmetadiss.MCRCreateURNAction" />
		<action class="org.mycore.frontend.workflowengine.jbpm.xmetadiss.MCRCreateDisshabAction" />                        
     </event>
     <transition name="go2isInitiatorsEmailAddressAvailable" to="isInitiatorsEmailAddressAvailable" />  
  </state>

  <decision name="isInitiatorsEmailAddressAvailable">
     <transition name="no" to="getInitiatorsEmailAddress"> 
        <condition expression="#{empty(contextInstance.variables['initiatorEmail'])}"/>
     </transition>
     <transition name="yes" to="disshabCreated">
        <condition expression="#{!empty(contextInstance.variables['initiatorEmail'])}"/>
     </transition>
  </decision>
  
  <task-node name="getInitiatorsEmailAddress">
     <task name="taskGetInitiatorsEmailAddress" swimlane="initiator" />
     <transition name="go2IsInitiatorsEmailAddressAvailable" to="isInitiatorsEmailAddressAvailable" />
  </task-node>
  
  <task-node name="disshabCreated">
     <task name="taskCompleteDisshabAndSendToLibrary" swimlane="initiator" />
     <transition name="go2canDisshabBeSubmitted" to="canDisshabBeSubmitted" />
  </task-node>

  <decision name="canDisshabBeSubmitted">
     <handler class="org.mycore.frontend.workflowengine.jbpm.xmetadiss.MCRDecisionHandlerXmetadiss" />
     <transition name="disshabCantBeSubmitted" to="disshabCreated" />
     <transition name="disshabCanBeSubmitted" to="disshabSubmitted" />
  </decision>
  
  <task-node name="disshabSubmitted">
     <event type='node-enter'>
        <action class="org.mycore.frontend.workflowengine.jbpm.xmetadiss.MCRDisshabSubmittedAction">
           <lockedVariables>initiator,createdDocID,authorID,reservatedURN,attachedDerivates</lockedVariables>
        </action>
     </event> 
     <task name="taskCheckCompleteness" swimlane="disseditor">
     </task> 
     <transition name="go2sendBackToDisshabCreated" to="sendBackToDisshabCreated" >
        <action class="org.mycore.frontend.workflowengine.jbpm.MCRSetDefaultAclsAction">
            <varmcrid>createdDocID</varmcrid>
            <varuserid>initiator</varuserid>
        </action>
     </transition>
     <transition name="go2canDisshabBeCommitted" to="canDisshabBeCommitted" />
  </task-node>
  
  <task-node name="sendBackToDisshabCreated">
     <task name="taskEnterMessageData" swimlane="disseditor" />
     <transition name="go2disshabCreated2" to="disshabCreated">
		<action class="org.mycore.frontend.workflowengine.jbpm.MCRSendmailAction">
		   <from>editor@myserver.de</from>
		   <to>initiator</to>
		   <replyTo>editor@myserver.de</replyTo>
		   <subject>Sie müssen bei Ihrer Dissertation Daten ergänzen</subject>
		   <!-- <body>Mustertext</body> -->
		   <jbpmVariableName>tmpTaskMessage</jbpmVariableName>
		</action>     
     </transition>
  </task-node>
  
  <task-node name="checkNonDigitalRequirements">
     <task name="taskCheckIfSignedAffirmationYetAvailable" swimlane="disseditor" />
     <transition name="go2canDisshabBeCommitted" to="canDisshabBeCommitted">
        <action class="org.mycore.frontend.workflowengine.jbpm.MCRSetWorkflowVariableAction">
           <varname>varSIGNED_AFFIRMATION_AVAILABLE@org.mycore.frontend.workflowengine.jbpm.MCRJbpmWorkflowBase</varname>
           <value>true</value>
        </action>
     </transition>
     <transition name="go2requireAffirmation" to="requireAffirmation" />
  </task-node>
  
  <task-node name="requireAffirmation">
     <task name="taskRequireSignedAffirmation" swimlane="disseditor" />
     <transition name="go2checkNonDigitalRequirements" to="checkNonDigitalRequirements">
		<action class="org.mycore.frontend.workflowengine.jbpm.MCRSendmailAction">
		   <from>editor@myserver.de</from>
		   <to>initiator</to>
		   <replyTo>editor@myserver.de</replyTo>
		   <subject>Sie müssen noch das Formblatt zur Abgabe elektronischer Dissertationen abgeben</subject>
		   <!-- <body>Mustertext</body> -->
		   <jbpmVariableName>tmpTaskMessage</jbpmVariableName>
   		   <dateOfSubmissionVariable>lastRequiredAffirmation</dateOfSubmissionVariable>
		</action>     
     </transition>
     <transition name="go2checkNonDigitalRequirementsWithoutMail" to="checkNonDigitalRequirements" />
  </task-node>
  
  <decision name="canDisshabBeCommitted">
     <handler class="org.mycore.frontend.workflowengine.jbpm.xmetadiss.MCRDecisionHandlerXmetadiss" />
     <transition name="go2sendBackToDisshabCreated" to="sendBackToDisshabCreated" />
     <transition name="go2checkNonDigitalRequirements" to="checkNonDigitalRequirements" />
     <transition name="go2wasCommitmentSuccessful" to="wasCommitmentSuccessful">
        <action class="org.mycore.frontend.workflowengine.jbpm.MCRCommitObjectAction">
           <varnameOBJID>createdDocID</varnameOBJID>
           <varnameERROR>COMMITERROR</varnameERROR>
        </action>
     </transition>
  </decision>  
  
  <decision name="wasCommitmentSuccessful">
     <transition name="go2adminCheck" to="adminCheck">  
        <condition expression="#{!empty(contextInstance.variables['COMMITERROR'])}" />
     </transition>
     <transition name="go2disshabCommitted" to="disshabCommitted">  
        <condition expression="#{empty(contextInstance.variables['COMMITERROR'])}" />
     </transition>     
  </decision>

  <task-node name="adminCheck">
     <event type='node-enter'>
		<action class="org.mycore.frontend.workflowengine.jbpm.MCRSendmailAction">
		   <from>editor@myserver.de</from>
		   <to>administrator@myserver.de</to>
		   <replyTo>editor@myserver.de</replyTo>
		   <subject>Probleme beim Veröffentlichen einer Dissertation</subject>
		   <body>Eine Dissertation konnte nicht veröffentlicht werden.</body>
		</action>          
     </event>
     <task name="taskAdminCheckCommitmentNotSuccessFul" swimlane="technicalAdministration" />
     <transition name="go2disshabCommitted" to="disshabCommitted" />
  </task-node>     

  <end-state name="disshabCommitted">
     <event type='node-enter'>
		<action class="org.mycore.frontend.workflowengine.jbpm.xmetadiss.MCRSendmailActionXmetadiss">
		   <from>editor@myserver.de</from>
		   <to>initiator</to>
		   <replyTo>editor@myserver.de</replyTo>
		   <subject>Ihre elektronische Dissertation wurde erfolgreich veröffentlicht</subject>
		   <!-- <body>dynamic</body> -->
		   <mode>success</mode>
		</action>     
     </event>     
  </end-state>
  
</process-definition>