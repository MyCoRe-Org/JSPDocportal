<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>de.uni.hh.peshat</groupId>
  <artifactId>peshat-webapp</artifactId>
  <name>Peshat Webapp</name>
  <description>...</description>
  <packaging>war</packaging>
  <parent>
		<artifactId>mycore</artifactId>
		<groupId>org.mycore</groupId>
		<version>2015.01-SNAPSHOT</version>
	</parent>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<hibernate.version>4.3.4.Final</hibernate.version>
		<mcr.finalName>peshat</mcr.finalName>
	</properties>
	<pluginRepositories>
		<pluginRepository>
			<id>MyCoRe HQ</id>
			<url>http://artifactory.mycore.de/mycore-releases</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>MyCoRe HQ Snapshots</id>
			<url>http://artifactory.mycore.de/mycore-snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
	<repositories>
		<repository>
			<id>MyCoRe HQ</id>
			<url>http://artifactory.mycore.de/mycore-releases</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>MyCoRe HQ Snapshots</id>
			<url>http://artifactory.mycore.de/mycore-snapshots</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<type>jar</type>
			<scope>test</scope>
			<optional>false</optional>
		</dependency>
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.1-901.jdbc4</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.2</version>
			<type>jar</type>
			<scope>provided</scope>
			<optional>false</optional>
		</dependency>
		<dependency>
			<groupId>xalan</groupId>
			<artifactId>xalan</artifactId>
		
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xercesImpl</artifactId>
	
			<scope>runtime</scope>
</dependency>
<dependency>
			<groupId>org.mycore</groupId>
			<artifactId>jspdocportal-module</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.mycore</groupId>
			<artifactId>mycore-user2</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.mycore</groupId>
			<artifactId>mycore-base</artifactId>
			<version>${project.version}</version>
			<scope>runtime</scope>
		</dependency>
		<!-- 
		<dependency>
			<groupId>org.jdom</groupId>
			<artifactId>jdom2</artifactId>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
		</dependency>
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
		</dependency>
		-->
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>javax.servlet</groupId>
									<artifactId>javax.servlet-api</artifactId>
									<version>3.0.1</version>
									<type>jar</type>
									<overWrite>true</overWrite>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${project.build.directory}/app/lib</outputDirectory>
							<stripVersion>true</stripVersion>
						</configuration>
					</execution>
					<execution>
						<id>unpack</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.mycore.plugins</groupId>
 								    <artifactId>datamodel-plugin</artifactId>
  									<version>0.6-SNAPSHOT</version>
									<includes>datamodel2*.xsl</includes>
									<!-- <excludes>datamodel2ext.xsl</excludes> -->
									<outputDirectory>${project.build.outputDirectory}/xsl</outputDirectory>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<archiveClasses>true</archiveClasses>
					<webResources>
						<resource>
							<directory>src/main/resources</directory>
							<targetPath>WEB-INF/classes</targetPath>
						</resource>
						<resource>
							<directory>src/main/config</directory>
							<targetPath>WEB-INF/classes</targetPath>
							<includes>
								<include>*.*</include>
							</includes>
							<excludes>
								<exclude>web.xml</exclude>
								<exclude>*.template</exclude>
								<exclude>datamodel-*.xml</exclude>
							</excludes>
						</resource>
						<resource>
							<directory>src/main/config/lang</directory>
							<targetPath>WEB-INF/classes</targetPath>
							<includes>
								<include>*.*</include>
							</includes>
							<excludes>
								<exclude>*.template</exclude>
							</excludes>
						</resource>
						<resource>
							<directory>src/main/config/hibernate</directory>
							<targetPath>WEB-INF/classes</targetPath>
							<excludes>
								<exclude>*.template</exclude>
							</excludes>
						</resource>
						<resource>
							<directory>src/main/config</directory>
							<targetPath>WEB-INF</targetPath>
							<includes>
								<include>web.xml</include>
							</includes>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
					<execution>
						<phase>install</phase>
						<configuration>
							<target>
								<unzip
									src="${project.build.directory}/${project.build.finalName}.war"
									dest="${project.build.directory}/app/${mcr.finalName}">
								</unzip>

								<!-- create CLI jar -->
								<property name="build.compiler" value="extJavac" />

								<path id="class-path">
									<fileset dir="${project.build.directory}/app">
										<include name="${mcr.finalName}/WEB-INF/lib/*.jar" />
									</fileset>
								</path>
								<mkdir dir="${project.build.directory}/classes" />
								<copy todir="${project.build.directory}/classes">
									<fileset
										dir="${project.build.directory}/app/${mcr.finalName}/WEB-INF/classes" />
								</copy>

								<pathconvert property="cpProp" dirsep="/" pathsep=" "
									refid="class-path">
									<map
										from="${project.build.directory}/app/${mcr.finalName}"
										to="${mcr.finalName}" />
								</pathconvert>

								<manifest file="${project.build.directory}/MANIFEST.MF">
									<attribute name="Main-Class"
										value="org.mycore.frontend.cli.MCRCommandLineInterface" />
									<attribute name="Class-Path" value="${cpProp} lib/javax.servlet-api.jar" />
								</manifest>
								<jar
									jarfile="${project.build.directory}/app/${mcr.finalName}-cli.jar"
									basedir="${project.build.directory}/classes" manifest="${project.build.directory}/MANIFEST.MF" />

							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.apache.ant</groupId>
						<artifactId>ant</artifactId>
						<version>1.8.0</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>xml-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>transform</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<transformationSets>
						<transformationSet>
							<dir>src/main/datamodel/def</dir>
							<outputDir>${project.build.outputDirectory}</outputDir>
							<stylesheet>${project.build.outputDirectory}/xsl/datamodel2schema.xsl</stylesheet>
							<fileMappers>
								<fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
									<targetExtension>.xsd</targetExtension>
								</fileMapper>
							</fileMappers>
						</transformationSet>
					</transformationSets>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>